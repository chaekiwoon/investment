<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="phaser.min.js"></script>
  </head>
  <body>
    hi
  </body>
</html>

<script type="text/javascript">
  var game = new Phaser.Game(600, 800, Phaser.CANVAS, null, { preload: preload, create: create, update: update });
  var keyMove;


  function preload() {
    // 게임에 필요한 데이터 로드

    game.load.spritesheet("player", "images/player.png", 80, 100);
    game.load.image("stock", "images/player.png");
  }

  function create() {
    // 게임 처음 실행시 수행되는 함수
    game.physics.startSystem(Phaser.Physics.ARCADE); // 게임 속성 설정(아케이드)
    
    game.stage.backgroundColor = "#2F9D27";         // 게임 배경색 설청
    game.create.texture('sky', ['E'], 800, 80, 0);  // 'E' 코드색상 800x80 크기의 블럭을 'sky' 이름으로 생성
    game.add.sprite(0, 0, 'sky');                   // sky를 x좌표 0, y좌표 0 위치에 추가

    player = game.add.sprite(400,650,"player");
    game.physics.arcade.enable(player);
    player.animations.add("left",[0,1,2],10,true);
    player.animations.add("right",[0,1,2],10,true);

    keyMove = game.input.keyboard.createCursorKeys();

    game.physics.arcade.gravity.y = 150;

    var stocks = game.add.group();
    
      var min = 50;
      var max = 470;
      var random = Math.floor(Math.random() * (+max - +min)) + +min;
      for(var i=0;i<120;i++) {
        stocks.create( random, 80, 'stock');
        game.physics.enable( stocks, Phaser.Physics.ARCADE);
        //delay(1000);
      }
      game.time.events.add(1000, function () {
        stocks.create( random, 80, 'stock');
        game.physics.enable( stocks, Phaser.Physics.ARCADE);
      });
      // setInterval(function () {
      //   stocks.create( random, 80, 'stock');
      // }, 2000);
      // stocks.create( random, 80, 'stock');
      // game.physics.enable( stocks, Phaser.Physics.ARCADE);
      // delay(1000);

      // game.physics.enable( stocks, Phaser.Physics.ARCADE);
    
    //game.physics.enable( stocks, Phaser.Physics.ARCADE);

    console.log("hi");
  }

  function update() {
    player.body.velocity.setTo(0, 0); // 관성을 0으로 설정
    if (keyMove.left.isDown) {
        if(player.x >= 50 ) {
          player.body.velocity.x = -350;
        }   // player x좌표 위치를 -150 속도로 이동
        player.animations.play("left");  // player에게 'left' 애니메이션 적용
        
    } else if (keyMove.right.isDown) {
        if(player.x <= 460 ) {
          player.body.velocity.x = +350;
        }
  
        player.animations.play("right");
         
    } else {
        player.animations.stop();      // player에게 적용중인 애니메이션을 멈춘다.
        player.frame = 3;              // player의 frame을 3번째 프레임으로 설정한다.
    }
  }

  function delay(ms) {
    var cur_d = new Date();
    var cur_ticks = cur_d.getTime();
    var ms_passed = 0;
    while (ms_passed < ms) {
      var d = new Date();  // Possible memory leak?
      var ticks = d.getTime();
      ms_passed = ticks - cur_ticks;
        // d = null;  // Prevent memory leak?
    }
  }
</script>